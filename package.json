{
  "name": "ecommerce-microservices",
  "private": true,
  "scripts": {
    "build": "turbo build",
    "dev": "turbo dev",
    "start": "turbo start",
    "lint": "turbo lint",
    "lint:fix": "turbo lint:fix",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md,yml,yaml}\"",
    "type-check": "turbo type-check",
    "test": "turbo test",
    "test:watch": "turbo test:watch",
    "clean": "turbo clean && rm -rf node_modules",
    "prepare": "husky",
    "commit": "cz",
    "docker:build": "docker-compose build --parallel",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --rmi all --remove-orphans",
    "docker:infra": "docker-compose up -d postgres redis traefik",
    "docker:core": "docker-compose up -d postgres redis",
    "docker:storage": "docker-compose --profile storage up -d",
    "docker:search": "docker-compose --profile search up -d",
    "docker:messaging": "docker-compose --profile messaging up -d",
    "docker:auth-stack": "docker-compose up -d postgres redis && docker-compose --profile services up -d auth",
    "docker:catalog-stack": "docker-compose --profile storage --profile search --profile messaging up -d && docker-compose --profile services up -d catalog",
    "docker:orders-stack": "docker-compose --profile messaging up -d && docker-compose --profile services up -d orders",
    "docker:all": "docker-compose --profile storage --profile search --profile messaging --profile services up -d",
    "docker:prod:build": "docker-compose -f docker-compose.prod.yml build --parallel",
    "docker:prod:up": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:prod:down": "docker-compose -f docker-compose.prod.yml down",
    "k8s:dev:deploy": "kubectl apply -f k8s/namespaces/ -f k8s/configmaps/ -f k8s/secrets/ -f k8s/dev/",
    "k8s:dev:delete": "kubectl delete -f k8s/dev/ --ignore-not-found=true",
    "k8s:dev:status": "kubectl get pods,svc -n ecommerce-dev",
    "k8s:dev:logs": "kubectl logs -f -l app=ecommerce -n ecommerce-dev",
    "k8s:prod:deploy": "kubectl apply -f k8s/namespaces/ -f k8s/configmaps/ -f k8s/secrets/ -f k8s/prod/",
    "k8s:prod:delete": "kubectl delete -f k8s/prod/ --ignore-not-found=true",
    "k8s:prod:status": "kubectl get pods,svc -n ecommerce-prod",
    "db:migrate": "turbo db:migrate",
    "db:seed": "turbo db:seed",
    "db:studio": "turbo db:studio",
    "db:shell": "docker-compose exec postgres psql -U postgres -d postgres",
    "db:shell:auth": "docker-compose exec postgres psql -U auth_user -d auth_db",
    "db:shell:catalog": "docker-compose exec postgres psql -U catalog_user -d catalog_db",
    "db:shell:orders": "docker-compose exec postgres psql -U orders_user -d orders_db",
    "db:shell:payments": "docker-compose exec postgres psql -U payments_user -d payments_db",
    "db:shell:inventory": "docker-compose exec postgres psql -U inventory_user -d inventory_db",
    "db:shell:notifications": "docker-compose exec postgres psql -U notifications_user -d notifications_db",
    "health:check": "node scripts/health-check.js",
    "health:postgres": "docker-compose exec postgres pg_isready -U postgres",
    "health:redis": "docker-compose exec redis redis-cli ping",
    "dev:reset": "npm run docker:clean && npm run docker:up && npm run db:migrate && npm run db:seed",
    "dev:fresh": "npm run docker:down && npm run docker:infra && echo 'Infrastructure ready!'",
    "dev:logs:auth": "docker-compose logs -f auth",
    "dev:logs:catalog": "docker-compose logs -f catalog",
    "dev:logs:orders": "docker-compose logs -f orders",
    "dev:logs:payments": "docker-compose logs -f payments",
    "dev:logs:inventory": "docker-compose logs -f inventory",
    "dev:logs:notifications": "docker-compose logs -f notifications",
    "ci:test": "npm run lint && npm run type-check && npm run test",
    "deploy:staging": "node scripts/deploy.js staging",
    "deploy:production": "node scripts/deploy.js production"
  },
  "dependencies": {
    "dotenv": "^16.4.7"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "commitizen": "^4.3.1",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-import-resolver-typescript": "^4.4.2",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.4.1",
    "eslint-plugin-turbo": "^2.5.4",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.0",
    "prettier": "^3.5.3",
    "turbo": "^2.5.4",
    "typescript": "^5.8.3"
  },
  "engines": {
    "node": ">=18",
    "npm": ">=9.0.0"
  },
  "packageManager": "npm@11.4.1",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}
